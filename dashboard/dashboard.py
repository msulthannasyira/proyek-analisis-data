# -*- coding: utf-8 -*-
"""Proyek Analisis Data.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18q7ayi7dc4Mg7L-IPNY-FY7tZKQjMRSL

# Proyek Analisis Data: [Input Nama Dataset]
- **Nama:** Muhammad Sulthan Nasyira
- **Email:** mc589d5y2486@student.devacademy.id
- **ID Dicoding:** MC589D5Y2486

## Menentukan Pertanyaan Bisnis

- Apakah ada pola musiman (harian atau bulanan) dalam konsentrasi PM2.5 pada distrik changping?
- Bagaimana hubungan antara kecepatan angin (WSPM) dan konsentrasi PM2.5 pada distrik changping?

## Import Semua Packages/Library yang Digunakan
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import datetime as dt

"""# Data Wrangling

### Gathering Data
"""

# Membaca dataset
file_path = '../data/data_1.csv'
df = pd.read_csv(file_path)

# Menampilkan informasi awal dataset
df.info()
df.head()



"""**Insight:**
- Dataset ini terdiri dari data kualitas udara yaitu konsentrasi PM2.5 dan parameter cuaca

- Kolom utama: 'year', 'month', 'day', 'hour', 'PM2.5', 'WSPM'

### Assessing Data
"""

# Mengecek missing values
df.isnull().sum()

# Statistik deskriptif
df.describe()

# Mengecek data unik di setiap kolom
df.nunique()

"""**Insight:**
- Banyak missing values pada kolom 'PM2.5' yang perlu untuk kita tindaklanjuti
- Kolom waktu memiliki data yang lengkap untuk analisis musiman

### Cleaning Data
"""

# Mengisi missing values PM2.5 dengan median
df['PM2.5'].fillna(df['PM2.5'].median(), inplace=True)

# Menggabungkan kolom waktu menjadi datetime
df['datetime'] = pd.to_datetime(df[['year', 'month', 'day', 'hour']])

# Mengatur datetime sebagai index
df.set_index('datetime', inplace=True)

# Menghapus kolom yang tidak perlu
df.drop(columns=['No'], inplace=True)

df.head()

"""**Insight:**
- Missing values dapat kita isi dengan median untuk menjaga distribusi data
- Data waktu digabungin agar lebih mudah digunakan untuk analisis musiman

## Exploratory Data Analysis (EDA)

### Explore ...
"""

# Visualisasi distribusi PM2.5
plt.figure(figsize=(10, 6))
sns.histplot(df['PM2.5'], bins=30, kde=True, color='skyblue')
plt.title('Distribusi PM2.5')
plt.show()

# Tren waktu PM2.5
plt.figure(figsize=(15, 6))
plt.plot(df['PM2.5'])
plt.title('Konsentrasi PM2.5 dari waktu ke waktu')
plt.show()

"""**Insight:**
- Distribusi PM2.5 menunjukkan puncak yang dicurigai sebagai hubungan nya dengan kecepatan angin
- Ada pola musiman yang tampak jelas (fluktuasi)

## Visualization & Explanatory Analysis

### Pertanyaan 1:
"""

# Pola musiman bulanan
monthly_avg = df.resample('M')['PM2.5'].mean()
plt.figure(figsize=(12, 6))
monthly_avg.plot()
plt.title('Rata-rata Bulanan Konsentrasi PM2.5')
plt.show()

# Pola musiman harian
df['hour'] = df.index.hour
hourly_avg = df.groupby('hour')['PM2.5'].mean()
plt.figure(figsize=(12, 6))
hourly_avg.plot()
plt.title('Rata-rata Harian Konsentrasi PM2.5')
plt.show()

"""### Pertanyaan 2:"""

# Hubungan antara kecepatan angin dan PM2.5
plt.figure(figsize=(8, 6))
sns.scatterplot(x='WSPM', y='PM2.5', data=df, color='purple')
plt.title('Hubungan antara Kecepatan Angin dan PM2.5')
plt.show()

# Korelasi
corr = df[['PM2.5', 'WSPM']].corr()
print('Korelasi PM2.5 dan WSPM:\n', corr)

"""**Insight:**
- Konsentrasi PM2.5 cenderung lebih tinggi pada musim dingin dan malam hari
- WSPM dan PM2.5 menunjukkan hubungan korelasi negatif lemah (-0.27)

## Analisis Lanjutan (Opsional)
"""

plt.figure(figsize=(8, 6))
sns.heatmap(df[['PM2.5', 'WSPM']].corr(), annot=True, cmap='coolwarm')
plt.title('Korelasi PM2.5 dan WSPM')
plt.show()

"""## Conclusion

- Pola musiman menunjukkan bahwa konsentrasi PM2.5 meningkat pada malam hari dan selama musim dingin, kemungkinan karena inversi suhu dan peningkatan penggunaan pemanas rumah tangga yang membakar bahan bakar fosil
- Hubungan antara kecepatan angin (WSPM) dan PM2.5 menunjukkan bahwa meskipun angin membantu menyebarkan polusi, efeknya cukup lemah. Faktor lain seperti sumber polusi tetap memengaruhi tingkat PM2.5 secara signifikan
"""